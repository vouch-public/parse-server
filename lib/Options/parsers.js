"use strict";

function numberParser(key) {
  return function (opt) {
    const intOpt = parseInt(opt);
    if (!Number.isInteger(intOpt)) {
      throw new Error(`Key ${key} has invalid value ${opt}`);
    }
    return intOpt;
  };
}
function numberOrBoolParser(key) {
  return function (opt) {
    if (typeof opt === 'boolean') {
      return opt;
    }
    if (opt === 'true') {
      return true;
    }
    if (opt === 'false') {
      return false;
    }
    return numberParser(key)(opt);
  };
}
function objectParser(opt) {
  if (typeof opt == 'object') {
    return opt;
  }
  return JSON.parse(opt);
}
function arrayParser(opt) {
  if (Array.isArray(opt)) {
    return opt;
  } else if (typeof opt === 'string') {
    return opt.split(',');
  } else {
    throw new Error(`${opt} should be a comma separated string or an array`);
  }
}
function moduleOrObjectParser(opt) {
  if (typeof opt == 'object') {
    return opt;
  }
  try {
    return JSON.parse(opt);
  } catch (e) {
    /* */
  }
  return opt;
}
function booleanParser(opt) {
  if (opt == true || opt == 'true' || opt == '1') {
    return true;
  }
  return false;
}
function nullParser(opt) {
  if (opt == 'null') {
    return null;
  }
  return opt;
}
module.exports = {
  numberParser,
  numberOrBoolParser,
  nullParser,
  booleanParser,
  moduleOrObjectParser,
  arrayParser,
  objectParser
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJudW1iZXJQYXJzZXIiLCJrZXkiLCJvcHQiLCJpbnRPcHQiLCJwYXJzZUludCIsIk51bWJlciIsImlzSW50ZWdlciIsIkVycm9yIiwibnVtYmVyT3JCb29sUGFyc2VyIiwib2JqZWN0UGFyc2VyIiwiSlNPTiIsInBhcnNlIiwiYXJyYXlQYXJzZXIiLCJBcnJheSIsImlzQXJyYXkiLCJzcGxpdCIsIm1vZHVsZU9yT2JqZWN0UGFyc2VyIiwiZSIsImJvb2xlYW5QYXJzZXIiLCJudWxsUGFyc2VyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9PcHRpb25zL3BhcnNlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbnVtYmVyUGFyc2VyKGtleSkge1xuICByZXR1cm4gZnVuY3Rpb24gKG9wdCkge1xuICAgIGNvbnN0IGludE9wdCA9IHBhcnNlSW50KG9wdCk7XG4gICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGludE9wdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5ICR7a2V5fSBoYXMgaW52YWxpZCB2YWx1ZSAke29wdH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGludE9wdDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbnVtYmVyT3JCb29sUGFyc2VyKGtleSkge1xuICByZXR1cm4gZnVuY3Rpb24gKG9wdCkge1xuICAgIGlmICh0eXBlb2Ygb3B0ID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiBvcHQ7XG4gICAgfVxuICAgIGlmIChvcHQgPT09ICd0cnVlJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChvcHQgPT09ICdmYWxzZScpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIG51bWJlclBhcnNlcihrZXkpKG9wdCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9iamVjdFBhcnNlcihvcHQpIHtcbiAgaWYgKHR5cGVvZiBvcHQgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0O1xuICB9XG4gIHJldHVybiBKU09OLnBhcnNlKG9wdCk7XG59XG5cbmZ1bmN0aW9uIGFycmF5UGFyc2VyKG9wdCkge1xuICBpZiAoQXJyYXkuaXNBcnJheShvcHQpKSB7XG4gICAgcmV0dXJuIG9wdDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0ID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBvcHQuc3BsaXQoJywnKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7b3B0fSBzaG91bGQgYmUgYSBjb21tYSBzZXBhcmF0ZWQgc3RyaW5nIG9yIGFuIGFycmF5YCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbW9kdWxlT3JPYmplY3RQYXJzZXIob3B0KSB7XG4gIGlmICh0eXBlb2Ygb3B0ID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG9wdDtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKG9wdCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvKiAqL1xuICB9XG4gIHJldHVybiBvcHQ7XG59XG5cbmZ1bmN0aW9uIGJvb2xlYW5QYXJzZXIob3B0KSB7XG4gIGlmIChvcHQgPT0gdHJ1ZSB8fCBvcHQgPT0gJ3RydWUnIHx8IG9wdCA9PSAnMScpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIG51bGxQYXJzZXIob3B0KSB7XG4gIGlmIChvcHQgPT0gJ251bGwnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIG9wdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG51bWJlclBhcnNlcixcbiAgbnVtYmVyT3JCb29sUGFyc2VyLFxuICBudWxsUGFyc2VyLFxuICBib29sZWFuUGFyc2VyLFxuICBtb2R1bGVPck9iamVjdFBhcnNlcixcbiAgYXJyYXlQYXJzZXIsXG4gIG9iamVjdFBhcnNlcixcbn07XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBU0EsWUFBWSxD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