"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EventEmitterMQ = void 0;
var _events = _interopRequireDefault(require("events"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const emitter = new _events.default.EventEmitter();
const subscriptions = new Map();
function unsubscribe(channel) {
  if (!subscriptions.has(channel)) {
    //console.log('No channel to unsub from');
    return;
  }
  //console.log('unsub ', channel);
  emitter.removeListener(channel, subscriptions.get(channel));
  subscriptions.delete(channel);
}
class Publisher {
  constructor(emitter) {
    this.emitter = emitter;
  }
  publish(channel, message) {
    this.emitter.emit(channel, message);
  }
}
class Consumer extends _events.default.EventEmitter {
  constructor(emitter) {
    super();
    this.emitter = emitter;
  }
  subscribe(channel) {
    unsubscribe(channel);
    const handler = message => {
      this.emit('message', channel, message);
    };
    subscriptions.set(channel, handler);
    this.emitter.on(channel, handler);
  }
  unsubscribe(channel) {
    unsubscribe(channel);
  }
}
function createPublisher() {
  return new Publisher(emitter);
}
function createSubscriber() {
  return new Consumer(emitter);
}
const EventEmitterMQ = {
  createPublisher,
  createSubscriber
};
exports.EventEmitterMQ = EventEmitterMQ;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXZlbnRzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImVtaXR0ZXIiLCJldmVudHMiLCJFdmVudEVtaXR0ZXIiLCJzdWJzY3JpcHRpb25zIiwiTWFwIiwidW5zdWJzY3JpYmUiLCJjaGFubmVsIiwiaGFzIiwicmVtb3ZlTGlzdGVuZXIiLCJnZXQiLCJkZWxldGUiLCJQdWJsaXNoZXIiLCJjb25zdHJ1Y3RvciIsInB1Ymxpc2giLCJtZXNzYWdlIiwiZW1pdCIsIkNvbnN1bWVyIiwic3Vic2NyaWJlIiwiaGFuZGxlciIsInNldCIsIm9uIiwiY3JlYXRlUHVibGlzaGVyIiwiY3JlYXRlU3Vic2NyaWJlciIsIkV2ZW50RW1pdHRlck1RIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9NZXNzYWdlUXVldWUvRXZlbnRFbWl0dGVyTVEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV2ZW50cyBmcm9tICdldmVudHMnO1xuXG5jb25zdCBlbWl0dGVyID0gbmV3IGV2ZW50cy5FdmVudEVtaXR0ZXIoKTtcbmNvbnN0IHN1YnNjcmlwdGlvbnMgPSBuZXcgTWFwKCk7XG5cbmZ1bmN0aW9uIHVuc3Vic2NyaWJlKGNoYW5uZWw6IHN0cmluZykge1xuICBpZiAoIXN1YnNjcmlwdGlvbnMuaGFzKGNoYW5uZWwpKSB7XG4gICAgLy9jb25zb2xlLmxvZygnTm8gY2hhbm5lbCB0byB1bnN1YiBmcm9tJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8vY29uc29sZS5sb2coJ3Vuc3ViICcsIGNoYW5uZWwpO1xuICBlbWl0dGVyLnJlbW92ZUxpc3RlbmVyKGNoYW5uZWwsIHN1YnNjcmlwdGlvbnMuZ2V0KGNoYW5uZWwpKTtcbiAgc3Vic2NyaXB0aW9ucy5kZWxldGUoY2hhbm5lbCk7XG59XG5cbmNsYXNzIFB1Ymxpc2hlciB7XG4gIGVtaXR0ZXI6IGFueTtcblxuICBjb25zdHJ1Y3RvcihlbWl0dGVyOiBhbnkpIHtcbiAgICB0aGlzLmVtaXR0ZXIgPSBlbWl0dGVyO1xuICB9XG5cbiAgcHVibGlzaChjaGFubmVsOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuZW1pdHRlci5lbWl0KGNoYW5uZWwsIG1lc3NhZ2UpO1xuICB9XG59XG5cbmNsYXNzIENvbnN1bWVyIGV4dGVuZHMgZXZlbnRzLkV2ZW50RW1pdHRlciB7XG4gIGVtaXR0ZXI6IGFueTtcblxuICBjb25zdHJ1Y3RvcihlbWl0dGVyOiBhbnkpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuZW1pdHRlciA9IGVtaXR0ZXI7XG4gIH1cblxuICBzdWJzY3JpYmUoY2hhbm5lbDogc3RyaW5nKTogdm9pZCB7XG4gICAgdW5zdWJzY3JpYmUoY2hhbm5lbCk7XG4gICAgY29uc3QgaGFuZGxlciA9IG1lc3NhZ2UgPT4ge1xuICAgICAgdGhpcy5lbWl0KCdtZXNzYWdlJywgY2hhbm5lbCwgbWVzc2FnZSk7XG4gICAgfTtcbiAgICBzdWJzY3JpcHRpb25zLnNldChjaGFubmVsLCBoYW5kbGVyKTtcbiAgICB0aGlzLmVtaXR0ZXIub24oY2hhbm5lbCwgaGFuZGxlcik7XG4gIH1cblxuICB1bnN1YnNjcmliZShjaGFubmVsOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB1bnN1YnNjcmliZShjaGFubmVsKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVQdWJsaXNoZXIoKTogYW55IHtcbiAgcmV0dXJuIG5ldyBQdWJsaXNoZXIoZW1pdHRlcik7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN1YnNjcmliZXIoKTogYW55IHtcbiAgcmV0dXJuIG5ldyBDb25zdW1lcihlbWl0dGVyKTtcbn1cblxuY29uc3QgRXZlbnRFbWl0dGVyTVEgPSB7XG4gIGNyZWF0ZVB1Ymxpc2hlcixcbiAgY3JlYXRlU3Vic2NyaWJlcixcbn07XG5cbmV4cG9ydCB7IEV2ZW50RW1pdHRlck1RIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUE0QixTQUFBRCx1QkFBQUUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUU1QixNQUFNRyxPQUFPLEdBQUcsSUFBSUMsZUFBTSxDQUFDQyxZQUFZLEVBQUU7QUFDekMsTUFBTUMsYUFBYSxHQUFHLElBQUlDLEdBQUcsRUFBRTtBQUUvQixTQUFTQyxXQUFXQSxDQUFDQyxPQUFlLEVBQUU7RUFDcEMsSUFBSSxDQUFDSCxhQUFhLENBQUNJLEdBQUcsQ0FBQ0QsT0FBTyxDQUFDLEVBQUU7SUFDL0I7SUFDQTtFQUNGO0VBQ0E7RUFDQU4sT0FBTyxDQUFDUSxjQUFjLENBQUNGLE9BQU8sRUFBRUgsYUFBYSxDQUFDTSxHQUFHLENBQUNILE9BQU8sQ0FBQyxDQUFDO0VBQzNESCxhQUFhLENBQUNPLE1BQU0sQ0FBQ0osT0FBTyxDQUFDO0FBQy9CO0FBRUEsTUFBTUssU0FBUyxDQUFDO0VBR2RDLFdBQVdBLENBQUNaLE9BQVksRUFBRTtJQUN4QixJQUFJLENBQUNBLE9BQU8sR0FBR0EsT0FBTztFQUN4QjtFQUVBYSxPQUFPQSxDQUFDUCxPQUFlLEVBQUVRLE9BQWUsRUFBUTtJQUM5QyxJQUFJLENBQUNkLE9BQU8sQ0FBQ2UsSUFBSSxDQUFDVCxPQUFPLEVBQUVRLE9BQU8sQ0FBQztFQUNyQztBQUNGO0FBRUEsTUFBTUUsUUFBUSxTQUFTZixlQUFNLENBQUNDLFlBQVksQ0FBQztFQUd6Q1UsV0FBV0EsQ0FBQ1osT0FBWSxFQUFFO0lBQ3hCLEtBQUssRUFBRTtJQUNQLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxPQUFPO0VBQ3hCO0VBRUFpQixTQUFTQSxDQUFDWCxPQUFlLEVBQVE7SUFDL0JELFdBQVcsQ0FBQ0MsT0FBTyxDQUFDO0lBQ3BCLE1BQU1ZLE9BQU8sR0FBR0osT0FBTyxJQUFJO01BQ3pCLElBQUksQ0FBQ0MsSUFBSSxDQUFDLFNBQVMsRUFBRVQsT0FBTyxFQUFFUSxPQUFPLENBQUM7SUFDeEMsQ0FBQztJQUNEWCxhQUFhLENBQUNnQixHQUFHLENBQUNiLE9BQU8sRUFBRVksT0FBTyxDQUFDO0lBQ25DLElBQUksQ0FBQ2xCLE9BQU8sQ0FBQ29CLEVBQUUsQ0FBQ2QsT0FBTyxFQUFFWSxPQUFPLENBQUM7RUFDbkM7RUFFQWIsV0FBV0EsQ0FBQ0MsT0FBZSxFQUFRO0lBQ2pDRCxXQUFXLENBQUNDLE9BQU8sQ0FBQztFQUN0QjtBQUNGO0FBRUEsU0FBU2UsZUFBZUEsQ0FBQSxFQUFRO0VBQzlCLE9BQU8sSUFBSVYsU0FBUyxDQUFDWCxPQUFPLENBQUM7QUFDL0I7QUFFQSxTQUFTc0IsZ0JBQWdCQSxDQUFBLEVBQVE7RUFDL0IsT0FBTyxJQUFJTixRQUFRLENBQUNoQixPQUFPLENBQUM7QUFDOUI7QUFFQSxNQUFNdUIsY0FBYyxHQUFHO0VBQ3JCRixlQUFlO0VBQ2ZDO0FBQ0YsQ0FBQztBQUFDRSxPQUFBLENBQUFELGNBQUEsR0FBQUEsY0FBQSJ9